name: release

on:
  push:
    tags:
      - '*'

jobs:
  build-windows-x86_64:
    runs-on: windows-latest
    needs: create-release
    env:
      WINDOWS_APP_RELEASE_PATH: frontend\app_flowy\product\${{ github.ref_name }}\windows
      WINDOWS_ZIP_NAME: AppFlowy-windows-x86_64.zip
      WINDOWS_INSTALLER_NAME: AppFlowy-${{ github.ref_name }}-windows-x86_64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup environment - Rust and Cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 'stable-2022-04-07'

      - name: Setup environment - Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.0.5'

      - name: Pre build
        working-directory: frontend
        run: |
          cargo install --force cargo-make
          cargo install --force duckscript_cli
          cargo make appflowy-deps-tools

      - name: Build Windows app
        working-directory: frontend
        run: |
          flutter config --enable-windows-desktop
          cargo make --env APP_VERSION=${{ github.ref_name }} --profile production-windows-x86 appflowy

      - uses: vimtor/action-zip@v1
        with:
          files: ${{ env.WINDOWS_APP_RELEASE_PATH }}\
          dest: ${{ env.WINDOWS_APP_RELEASE_PATH }}\${{ env.WINDOWS_ZIP_NAME }}
      
      - name: Copy installer config & icon file
        working-directory: frontend
        run: |
          cp scripts/windows_installer/* ../${{ env.WINDOWS_APP_RELEASE_PATH }}

      - name: Build installer executable
        working-directory: ${{ env.WINDOWS_APP_RELEASE_PATH }}
        run: |
          iscc /F${{ env.WINDOWS_INSTALLER_NAME }} inno_setup_config.iss /DAppVersion=${{ github.ref_name }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.WINDOWS_APP_RELEASE_PATH }}\${{ env.WINDOWS_ZIP_NAME }}
          asset_name: ${{ env.WINDOWS_ZIP_NAME }}
          asset_content_type: application/octet-stream

      - name: Upload Installer Asset
        id: upload-installer-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.WINDOWS_APP_RELEASE_PATH }}\Output\${{ env.WINDOWS_INSTALLER_NAME }}.exe
          asset_name: ${{ env.WINDOWS_INSTALLER_NAME }}.exe
          asset_content_type: application/octet-stream
