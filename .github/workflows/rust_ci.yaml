name: Rust-CI

on:
  push:
    branches:
      - "main"
      - "develop"
      - "release/*"
  #    paths:
  #      - "frontend/rust-lib/**"

  pull_request:
    branches:
      - "main"
      - "develop"
      - "release/*"
#    paths:
#      - "frontend/rust-lib/**"

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: "1.77.2"

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [
          self-hosted,
          #ubuntu-latest
        ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Maximize build space
        if: runner.os != 'self-hosted'
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo docker image prune --all --force

      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        id: rust_toolchain
        if: runner.os != 'self-hosted'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          components: rustfmt, clippy
          profile: minimal

      - name: Install prerequisites
        if: runner.os != 'self-hosted'
        working-directory: frontend
        run: |
          cargo install --force cargo-make
          cargo install --force duckscript_cli

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.os }}
          workspaces: |
            frontend/rust-lib

      - name: Checkout appflowy cloud code
        uses: actions/checkout@v4
        with:
          repository: AppFlowy-IO/AppFlowy-Cloud
          path: AppFlowy-Cloud

      - name: Prepare appflowy cloud env
        working-directory: AppFlowy-Cloud
        run: |
          cp deploy.env .env
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sed -i 's|RUST_LOG=.*|RUST_LOG=trace|' .env
            sed -i 's|API_EXTERNAL_URL=.*|API_EXTERNAL_URL=http://localhost|' .env
          else
            sed -i '' 's|RUST_LOG=.*|RUST_LOG=trace|' .env
            sed -i '' 's|API_EXTERNAL_URL=.*|API_EXTERNAL_URL=http://localhost|' .env

      - name: Run Docker-Compose
        working-directory: AppFlowy-Cloud
        env:
          BACKEND_VERSION: 0.3.24-amd64
        run: |
          docker pull appflowyinc/appflowy_cloud:latest
          docker compose up -d

      - name: Run rust-lib tests
        working-directory: frontend/rust-lib
        env:
          RUST_LOG: info
          RUST_BACKTRACE: 1
          af_cloud_test_base_url: http://localhost
          af_cloud_test_ws_url: ws://localhost/ws/v1
          af_cloud_test_gotrue_url: http://localhost/gotrue
        run: |
          DISABLE_CI_TEST_LOG="true" cargo test --no-default-fe
