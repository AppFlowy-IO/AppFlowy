#https://github.com/sagiegurari/cargo-make

extend = [
    { path = "scripts/makefile/desktop.toml" },
    { path = "scripts/makefile/protobuf.toml" },
    { path = "scripts/makefile/tests.toml" },
    { path = "scripts/makefile/docker.toml" },
    { path = "scripts/makefile/env.toml" },
    { path = "scripts/makefile/flutter.toml" },
]

[env]
RUST_LOG = "info"
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
CARGO_MAKE_CRATE_FS_NAME = "dart_ffi"
CARGO_MAKE_CRATE_NAME = "dart-ffi"
LIB_NAME = "dart_ffi"
VERSION = "0.0.3"
FEATURES = "flutter"
PRODUCT_NAME = "AppFlowy"
#CRATE_TYPE: https://doc.rust-lang.org/reference/linkage.html
CRATE_TYPE = "cdylib"
SDK_EXT = "dylib"
APP_ENVIRONMENT = "local"
FLUTTER_FLOWY_SDK_PATH="app_flowy/packages/flowy_sdk"
PROTOBUF_DERIVE_CACHE="../shared-lib/flowy-derive/src/derive_cache/derive_cache.rs"

[env.development-mac]
RUST_LOG = "trace"
TARGET_OS = "macos"
RUST_COMPILE_TARGET = "x86_64-apple-darwin"
BUILD_FLAG = "debug"
FLUTTER_OUTPUT_DIR = "Debug"
PRODUCT_EXT = "app"

[env.production-mac-aarch64]
BUILD_FLAG = "release"
TARGET_OS = "macos"
RUST_COMPILE_TARGET = "aarch64-apple-darwin"
FLUTTER_OUTPUT_DIR = "Release"
PRODUCT_EXT = "app"
APP_ENVIRONMENT = "production"

[env.production-mac-x86]
BUILD_FLAG = "release"
TARGET_OS = "macos"
RUST_COMPILE_TARGET = "x86_64-apple-darwin"
FLUTTER_OUTPUT_DIR = "Release"
PRODUCT_EXT = "app"
APP_ENVIRONMENT = "production"

[env.development-windows-x86]
TARGET_OS = "windows"
RUST_COMPILE_TARGET = "x86_64-pc-windows-msvc"
BUILD_FLAG = "debug"
FLUTTER_OUTPUT_DIR = "Debug"
PRODUCT_EXT = "exe"
CRATE_TYPE = "cdylib"
SDK_EXT = "dll"

[env.production-windows-x86]
BUILD_FLAG = "release"
TARGET_OS = "windows"
RUST_COMPILE_TARGET = "x86_64-pc-windows-msvc"
FLUTTER_OUTPUT_DIR = "Release"
PRODUCT_EXT = "exe"
CRATE_TYPE = "cdylib"
SDK_EXT = "dll"
APP_ENVIRONMENT = "production"

[env.development-linux-x86]
TARGET_OS = "linux"
RUST_COMPILE_TARGET = "x86_64-unknown-linux-gnu"
BUILD_FLAG = "debug"
CRATE_TYPE = "cdylib"
FLUTTER_OUTPUT_DIR = "Debug"
SDK_EXT = "so"
LINUX_ARCH = "x64"

[env.production-linux-x86]
BUILD_FLAG = "release"
TARGET_OS = "linux"
RUST_COMPILE_TARGET = "x86_64-unknown-linux-gnu"
CRATE_TYPE = "cdylib"
FLUTTER_OUTPUT_DIR = "Release"
SDK_EXT = "so"
LINUX_ARCH = "x64"
APP_ENVIRONMENT = "production"

[env.development-linux-aarch64]
TARGET_OS = "linux"
RUST_COMPILE_TARGET = "aarch64-unknown-linux-gnu"
BUILD_FLAG = "debug"
CRATE_TYPE = "cdylib"
FLUTTER_OUTPUT_DIR = "Debug"
SDK_EXT = "so"
LINUX_ARCH = "arm64"

[env.production-linux-aarch64]
BUILD_FLAG = "release"
TARGET_OS = "linux"
RUST_COMPILE_TARGET = "aarch64-unknown-linux-gnu"
CRATE_TYPE = "cdylib"
FLUTTER_OUTPUT_DIR = "Release"
SDK_EXT = "so"
LINUX_ARCH = "arm64"
APP_ENVIRONMENT = "production"

[tasks.echo_env]
script = [
    '''
    echo "-------- Env Parameters --------"
    echo CRATE_TYPE: ${CRATE_TYPE}
    echo BUILD_FLAG: ${BUILD_FLAG}
    echo TARGET_OS: ${TARGET_OS}
    echo RUST_COMPILE_TARGET: ${RUST_COMPILE_TARGET}
    echo FEATURES: ${FEATURES}
    echo PRODUCT_EXT: ${PRODUCT_EXT}
    echo APP_ENVIRONMENT: ${APP_ENVIRONMENT}
    echo ${platforms}
    '''
]
script_runner = "@shell"

[env.production-ios]
BUILD_FLAG = "release"
TARGET_OS = "ios"
FLUTTER_OUTPUT_DIR = "Release"
PRODUCT_EXT = "ipa"


[tasks.setup-crate-type]
private = true
script = [
    """
      toml = readfile ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/rust-lib/${CARGO_MAKE_CRATE_NAME}/Cargo.toml
      val = replace ${toml} "staticlib" ${CRATE_TYPE}
      result = writefile ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/rust-lib/${CARGO_MAKE_CRATE_NAME}/Cargo.toml ${val}
      assert ${result}
      """,
]
script_runner = "@duckscript"

[tasks.restore-crate-type]
private = true
script = [
    """
      toml = readfile ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/rust-lib/${CARGO_MAKE_CRATE_NAME}/Cargo.toml
      val = replace ${toml} ${CRATE_TYPE} "staticlib"
      result = writefile ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/rust-lib/${CARGO_MAKE_CRATE_NAME}/Cargo.toml ${val}
      assert ${result}
      """,
]
script_runner = "@duckscript"

[tasks.test-build]
condition = { env_set = [ "FLUTTER_FLOWY_SDK_PATH"] }
script = [
    """
      cd ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/rust-lib/flowy-net
      cargo build -vv --features=dart
      """,
]
script_runner = "@shell"
