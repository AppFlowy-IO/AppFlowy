# Generated file - do not edit
# Generated by native_splash_screen_cli

# Determine splash screen files for different build types
set(SPLASH_SCREEN_FILE_DEBUG "${CMAKE_CURRENT_SOURCE_DIR}/native_splash_screen_debug.cpp")
set(SPLASH_SCREEN_FILE_RELEASE "${CMAKE_CURRENT_SOURCE_DIR}/native_splash_screen_release.cpp")
set(SPLASH_SCREEN_FILE_PROFILE "${CMAKE_CURRENT_SOURCE_DIR}/native_splash_screen_profile.cpp")

# Validate that all expected files exist
foreach(CONFIG_TYPE IN ITEMS DEBUG RELEASE PROFILE)
    string(TOLOWER "${CONFIG_TYPE}" CONFIG_TYPE_LOWER)
    if(NOT EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/native_splash_screen_${CONFIG_TYPE_LOWER}.cpp")
        message(FATAL_ERROR
            "\n-------------------------------------------------------------\n"
            "Missing splash screen configuration for ${CONFIG_TYPE} mode:\n"
            "${CMAKE_CURRENT_SOURCE_DIR}/native_splash_screen_${CONFIG_TYPE_LOWER}.cpp\n\n"
            "Please run the following command in your project root:\n"
            "   dart run native_splash_screen_cli gen\n"
            "This will generate all necessary configuration files.\n"
            "-------------------------------------------------------------\n")
    endif()
endforeach()

# Create a static library for the splash screen code
add_library(native_splash_screen_windows STATIC "")

# Dynamically select the correct splash screen source file per config
target_sources(native_splash_screen_windows
  PRIVATE
    "$<IF:$<CONFIG:Debug>,${SPLASH_SCREEN_FILE_DEBUG},$<IF:$<CONFIG:Profile>,${SPLASH_SCREEN_FILE_PROFILE},${SPLASH_SCREEN_FILE_RELEASE}>>"
)

# Set properties for the library
set_target_properties(native_splash_screen_windows PROPERTIES
  CXX_STANDARD 17
  CXX_STANDARD_REQUIRED YES
  POSITION_INDEPENDENT_CODE ON
)

# Define compile definitions
target_compile_definitions(native_splash_screen_windows PUBLIC
  UNICODE
  _UNICODE
  WIN32
  _WINDOWS
  _HAS_EXCEPTIONS=0
)

# Include directories
target_include_directories(native_splash_screen_windows PUBLIC
  "${CMAKE_CURRENT_SOURCE_DIR}"
)

# Warn if CMAKE_BUILD_TYPE is unset in single-config environments
if(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)
  message(WARNING "CMAKE_BUILD_TYPE not set. Defaulting to Release splash screen.")
endif()