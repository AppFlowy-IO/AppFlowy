/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.4
 * source: view_info.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./view";
import * as pb_1 from "google-protobuf";
export class ViewInfoPB extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        id?: string;
        belong_to_id?: string;
        name?: string;
        desc?: string;
        data_type?: dependency_1.ViewDataFormatPB;
        belongings?: dependency_1.RepeatedViewPB;
        ext_data?: string;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("id" in data && data.id != undefined) {
                this.id = data.id;
            }
            if ("belong_to_id" in data && data.belong_to_id != undefined) {
                this.belong_to_id = data.belong_to_id;
            }
            if ("name" in data && data.name != undefined) {
                this.name = data.name;
            }
            if ("desc" in data && data.desc != undefined) {
                this.desc = data.desc;
            }
            if ("data_type" in data && data.data_type != undefined) {
                this.data_type = data.data_type;
            }
            if ("belongings" in data && data.belongings != undefined) {
                this.belongings = data.belongings;
            }
            if ("ext_data" in data && data.ext_data != undefined) {
                this.ext_data = data.ext_data;
            }
        }
    }
    get id() {
        return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
    }
    set id(value: string) {
        pb_1.Message.setField(this, 1, value);
    }
    get belong_to_id() {
        return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
    }
    set belong_to_id(value: string) {
        pb_1.Message.setField(this, 2, value);
    }
    get name() {
        return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
    }
    set name(value: string) {
        pb_1.Message.setField(this, 3, value);
    }
    get desc() {
        return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
    }
    set desc(value: string) {
        pb_1.Message.setField(this, 4, value);
    }
    get data_type() {
        return pb_1.Message.getFieldWithDefault(this, 5, dependency_1.ViewDataFormatPB.DeltaFormat) as dependency_1.ViewDataFormatPB;
    }
    set data_type(value: dependency_1.ViewDataFormatPB) {
        pb_1.Message.setField(this, 5, value);
    }
    get belongings() {
        return pb_1.Message.getWrapperField(this, dependency_1.RepeatedViewPB, 6) as dependency_1.RepeatedViewPB;
    }
    set belongings(value: dependency_1.RepeatedViewPB) {
        pb_1.Message.setWrapperField(this, 6, value);
    }
    get has_belongings() {
        return pb_1.Message.getField(this, 6) != null;
    }
    get ext_data() {
        return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
    }
    set ext_data(value: string) {
        pb_1.Message.setField(this, 7, value);
    }
    static fromObject(data: {
        id?: string;
        belong_to_id?: string;
        name?: string;
        desc?: string;
        data_type?: dependency_1.ViewDataFormatPB;
        belongings?: ReturnType<typeof dependency_1.RepeatedViewPB.prototype.toObject>;
        ext_data?: string;
    }): ViewInfoPB {
        const message = new ViewInfoPB({});
        if (data.id != null) {
            message.id = data.id;
        }
        if (data.belong_to_id != null) {
            message.belong_to_id = data.belong_to_id;
        }
        if (data.name != null) {
            message.name = data.name;
        }
        if (data.desc != null) {
            message.desc = data.desc;
        }
        if (data.data_type != null) {
            message.data_type = data.data_type;
        }
        if (data.belongings != null) {
            message.belongings = dependency_1.RepeatedViewPB.fromObject(data.belongings);
        }
        if (data.ext_data != null) {
            message.ext_data = data.ext_data;
        }
        return message;
    }
    toObject() {
        const data: {
            id?: string;
            belong_to_id?: string;
            name?: string;
            desc?: string;
            data_type?: dependency_1.ViewDataFormatPB;
            belongings?: ReturnType<typeof dependency_1.RepeatedViewPB.prototype.toObject>;
            ext_data?: string;
        } = {};
        if (this.id != null) {
            data.id = this.id;
        }
        if (this.belong_to_id != null) {
            data.belong_to_id = this.belong_to_id;
        }
        if (this.name != null) {
            data.name = this.name;
        }
        if (this.desc != null) {
            data.desc = this.desc;
        }
        if (this.data_type != null) {
            data.data_type = this.data_type;
        }
        if (this.belongings != null) {
            data.belongings = this.belongings.toObject();
        }
        if (this.ext_data != null) {
            data.ext_data = this.ext_data;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.id.length)
            writer.writeString(1, this.id);
        if (this.belong_to_id.length)
            writer.writeString(2, this.belong_to_id);
        if (this.name.length)
            writer.writeString(3, this.name);
        if (this.desc.length)
            writer.writeString(4, this.desc);
        if (this.data_type != dependency_1.ViewDataFormatPB.DeltaFormat)
            writer.writeEnum(5, this.data_type);
        if (this.has_belongings)
            writer.writeMessage(6, this.belongings, () => this.belongings.serialize(writer));
        if (this.ext_data.length)
            writer.writeString(7, this.ext_data);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ViewInfoPB {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ViewInfoPB();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.id = reader.readString();
                    break;
                case 2:
                    message.belong_to_id = reader.readString();
                    break;
                case 3:
                    message.name = reader.readString();
                    break;
                case 4:
                    message.desc = reader.readString();
                    break;
                case 5:
                    message.data_type = reader.readEnum();
                    break;
                case 6:
                    reader.readMessage(message.belongings, () => message.belongings = dependency_1.RepeatedViewPB.deserialize(reader));
                    break;
                case 7:
                    message.ext_data = reader.readString();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): ViewInfoPB {
        return ViewInfoPB.deserialize(bytes);
    }
}
