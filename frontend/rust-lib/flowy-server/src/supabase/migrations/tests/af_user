#!/usr/bin/env bash

set -e
cd "$(dirname "$0")"
source ./utils.sh
echo -e "${BLUE}Test af_user triggers${NC}"

# set params
UUID=$(uuidgen)
NAME="test_name_$(date +%s)"
EMAIL="test_mail_$(date +%s)@test.com"
echo -e "${YELLOW}UUID: $UUID, NAME: $NAME, EMAIL: $EMAIL${NC}"

# test trigger workspace_table insertion when any record of af_user is inserted
$PSQL --command "\
    INSERT INTO public.af_user (uuid, email, name) \
    VALUES ('$UUID', '$EMAIL', '$NAME');"
echo -e "${GREEN}af_user inserted${NC}"

# check uid
NEW_UID=$($PSQL --tuples-only --command "\
    SELECT uid FROM af_user WHERE uuid = '$UUID'")
echo -e "${GREEN}af_user uid: $NEW_UID${NC}"

# check workspace
WORKSPACE_ID=$(trim $($PSQL --tuples-only --command "\
    SELECT workspace_id \
    FROM public.af_workspace \
    WHERE owner_uid = $NEW_UID"))
if [ -z "$WORKSPACE_ID" ]; then
    echo -e "${RED}workspace not associated with af_user of uuid: $UUID${NC}"
    exit 1
else
    echo -e "${GREEN}workspace id associated with af_user(owner_uid): $WORKSPACE_ID${NC}"
fi

# check af_workspace_member role
WORKSPACE_ROLE=$(trim $($PSQL --tuples-only --command "\
    SELECT name \
    FROM public.af_roles \
    WHERE id = (\
        SELECT role_id \
        FROM public.af_workspace_member \
        WHERE workspace_id = '$WORKSPACE_ID')"))
if [ -z "$WORKSPACE_ROLE" ]; then
    echo -e "${RED}workspace role not associated with workspace of id: $WORKSPACE_ID${NC}"
    exit 1
else
    echo -e "${GREEN}workspace role id associated with workspace: $WORKSPACE_ROLE${NC}"
fi

if [ "$WORKSPACE_ROLE" != "Owner" ]; then
    echo -e "${RED}workspace role is not Owner${NC}"
    exit 1
fi
