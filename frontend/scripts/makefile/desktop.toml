# Define common variables
workspace_dir = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}"
lib_name = "${LIB_NAME}"
lib_ext = "${LIB_EXT}"

# Define a task to check environment variables
[tasks.env_check]
dependencies = ["echo_env", "install_flutter_protobuf"]
condition = {
  env_set = ["BUILD_FLAG", "RUST_COMPILE_TARGET", "CRATE_TYPE", "TARGET_OS"],
  channels = ["stable"]
}

# Define common build tasks for different platforms
[tasks.appflowy-core-dev]
mac_alias = "appflowy-core-dev-macos"
windows_alias = "appflowy-core-dev-windows"
linux_alias = "appflowy-core-dev-linux"
category = "Build"
dependencies = ["env_check"]
run_task = {
  name = ["setup-crate-type", "sdk-dev-build", "post-desktop", "restore-crate-type"]
}

# Define a common build task for different platforms
[tasks.sdk-dev-build]
private = true
script = [
  """
  cd ${workspace_dir}/rust-lib/
  rustup show
  cargo build --package=dart-ffi --target ${RUST_COMPILE_TARGET} --features "${FLUTTER_DESKTOP_FEATURES}" || exit 1
  cd ..
  """
]
script_runner = "@shell"

# Define a platform-specific build task for macOS
[tasks.sdk-dev-build.mac]
private = true
script = [
  """
  cd ${workspace_dir}/rust-lib/
  rustup show
  RUSTFLAGS="-C target-cpu=native -C link-arg=-mmacosx-version-min=11.0" cargo build --package=dart-ffi --target ${RUST_COMPILE_TARGET} --features "${FLUTTER_DESKTOP_FEATURES}" || exit 1
  cd ..
  """
]
script_runner = "@shell"

# Define a platform-specific build task for Android
[tasks.sdk-dev-build-android]
private = true
script = [
  """
  cd ${workspace_dir}/rust-lib/
  rustup show
  rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android || exit 1
  DEST=${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/appflowy_flutter/android/app/src/main/jniLibs
  rm -rf $DEST/arm64-v8a $DEST/armeabi-v7a $DEST/x86 $DEST/x86_64
  cargo ndk -t arm64-v8a -t armeabi-v7a -t x86 -t x86_64 -o $DEST build || exit 1
  cd ..
  """
]
script_runner = "@shell"

# Define a platform-specific build task for Windows
[tasks.sdk-dev-build.windows]
private = true
script = [
  """
  cd ${workspace_dir}/rust-lib/
  exec cargo build --package=dart-ffi --target ${RUST_COMPILE_TARGET} --features "${FLUTTER_DESKTOP_FEATURES}" || exit 1
  cd ..
  """
]
script_runner = "@duckscript"

# Define a task to release the appflowy-core
[tasks.appflowy-core-release]
description = "Build flowy sdk in release mode"
category = "Build"
dependencies = ["env_check"]
run_task = {
  name = ["setup-crate-type", "sdk-release-build", "post-desktop", "restore-crate-type"]
}

# Define a task for release SDK build
[tasks.sdk-release-build]
script = [
  """
  cd ${workspace_dir}/rust-lib/
  cargo build --profile ${CARGO_PROFILE} --${BUILD_FLAG} --package=dart-ffi --target ${RUST_COMPILE_TARGET} --features "${FLUTTER_DESKTOP_FEATURES}" || exit 1
  cd ..
  """
]
script_runner = "@shell"

# Define common post-build tasks for different platforms
[tasks.post-desktop]
mac_alias = "post-desktop-macos"
windows_alias = "post-desktop-windows"
linux_alias = "post-desktop-linux"
private = true
script = [
  """
  echo "ðŸš€ ðŸš€ ðŸš€  AppFlowy-Core build success"
  dart_ffi_dir="${workspace_dir}/appflowy_flutter/packages/appflowy_backend/${TARGET_OS}"
  lib="${lib_name}.${lib_ext}"

  cp "${workspace_dir}/rust-lib/target/${RUST_COMPILE_TARGET}/${BUILD_FLAG}/${lib}" "${dart_ffi_dir}/${lib}"
  cp "${workspace_dir}/rust-lib/${CARGO_MAKE_CRATE_NAME}/binding.h" "${dart_ffi_dir}/Classes/binding.h"
  """
]
script_runner = "@duckscript"

# Define a platform-specific post-build task for Windows
[tasks.post-desktop-windows]
private = true
script = [
  """
  echo "ðŸš€ ðŸš€ ðŸš€  AppFlowy-Core build success"
  dart_ffi_dir="${workspace_dir}/appflowy_flutter/windows/flutter/dart_ffi"
  lib="${lib_name}.${lib_ext}"

  cp "${workspace_dir}/rust-lib/target/${RUST_COMPILE_TARGET}/${BUILD_FLAG}/${lib}" "${dart_ffi_dir}/${lib}"
  cp "${workspace_dir}/rust-lib/${CARGO_MAKE_CRATE_NAME}/binding.h" "${dart_ffi_dir}/binding.h"
  """
]
script_runner = "@duckscript"

# Define a platform-specific post-build task for Linux
[tasks.post-desktop-linux]
private = true
script = [
  """
  echo "ðŸš€ ðŸš€ ðŸš€  AppFlowy-Core build success"
  dart_ffi_dir="${workspace_dir}/appflowy_flutter/linux/flutter/dart_ffi"
  lib="${lib_name}.${lib_ext}"

  cp "${workspace_dir}/rust-lib/target/${RUST_COMPILE_TARGET}/${BUILD_FLAG}/${lib}" "${dart_ffi_dir}/${lib}"
  cp "${workspace_dir}/rust-lib/${CARGO_MAKE_CRATE_NAME}/binding.h" "${dart_ffi_dir}/binding.h"
  """
]
script_runner = "@duckscript"
